@model PCGD.Models.ThemHocPhanModel

@{
    ViewBag.Title = "Thêm Học Phần Chương Trình";
    ViewBag.Selected = "selected";
}

<div class="card">
    <h5 class="card-header">@ViewBag.Title</h5>
    <div class="card-body">
        @using (Html.BeginForm("ThemHocPhan", "ChuongTrinh"))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ID)

            if (ViewData.ModelState["ThongBaoLoi"] != null && !String.IsNullOrEmpty(ViewData.ModelState["ThongBaoLoi"].Errors[0].ErrorMessage))
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <span class="d-block text-danger">@ViewData.ModelState["ThongBaoLoi"].Errors[0].ErrorMessage</span>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.MaHP)
                @Html.EditorFor(model => model.MaHP, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.MaHP, "", new { @class = "invalid-feedback" })
            </div>

            <label for="HocKi">Học kì</label>
            <div class="form-group">
                <select id="HocKi" name="HocKi" class="form-control">
                    <option value="1" @if (Model.HocKi == 1) { @Html.Raw("selected") }>I</option>
                    <option value="2" @if (Model.HocKi == 2) { @Html.Raw("selected") }>II</option>
                    <option value="3" @if (Model.HocKi == 3) { @Html.Raw("selected") }>III</option>
                    <option value="4" @if (Model.HocKi == 4) { @Html.Raw("selected") }>IV</option>
                    <option value="5" @if (Model.HocKi == 5) { @Html.Raw("selected") }>V</option>
                    <option value="6" @if (Model.HocKi == 6) { @Html.Raw("selected") }>VI</option>
                    <option value="7" @if (Model.HocKi == 7) { @Html.Raw("selected") }>VII</option>
                    <option value="8" @if (Model.HocKi == 8) { @Html.Raw("selected") }>VIII</option>
                </select>
                @Html.ValidationMessageFor(model => model.HocKi, "", new { @class = "invalid-feedback" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SoTietLT)
                @Html.EditorFor(model => model.SoTietLT, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.SoTietLT, "", new { @class = "invalid-feedback" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SoTietTH)
                @Html.EditorFor(model => model.SoTietTH, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.SoTietTH, "", new { @class = "invalid-feedback" })
            </div>

            <div class="text-left">
                <input type="submit" value="Thêm ngay" class="btn btn-primary" /> hoặc trở lại <a class="text-decoration-none" href="@Url.Action("Details", new { id = Model.ID })">trang chính</a>
            </div>
        }
    </div>
</div>
