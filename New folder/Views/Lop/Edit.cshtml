@model PCGD.Models.Lop

@{
    ViewBag.Title = "Sửa Lớp";
}

<div class="card">
    <h5 class="card-header">@ViewBag.Title</h5>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ID)

            if (ViewData.ModelState["ThongBaoLoi"] != null && !String.IsNullOrEmpty(ViewData.ModelState["ThongBaoLoi"].Errors[0].ErrorMessage))
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <span class="d-block text-danger">@ViewData.ModelState["ThongBaoLoi"].Errors[0].ErrorMessage</span>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.Nganh_ID)
                @Html.DropDownList("Nganh_ID", null, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Nganh_ID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChuongTrinh_ID)
                @Html.DropDownList("ChuongTrinh_ID", null, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ChuongTrinh_ID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TenLop)
                @Html.EditorFor(model => model.TenLop, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.TenLop, "", new { @class = "invalid-feedback" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SoSV)
                @Html.EditorFor(model => model.SoSV, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.SoSV, "", new { @class = "invalid-feedback" })
            </div>

            <div class="text-left">
                <input type="submit" value="Thêm ngay" class="btn btn-primary" /> hoặc trở lại <a class="text-decoration-none" href="@Url.Action("Index")">trang chính</a>
            </div>
        }
    </div>
</div>