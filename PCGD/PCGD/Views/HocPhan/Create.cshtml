@model PCGD.Models.HocPhan

@{
    ViewBag.Title = "Thêm Học Phần";
}

<div class="card">
    <h5 class="card-header">@ViewBag.Title</h5>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.MaHP)
                    @Html.EditorFor(model => model.MaHP, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.MaHP, "", new { @class = "invalid-feedback" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TenHP)
                    @Html.EditorFor(model => model.TenHP, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.TenHP, "", new { @class = "invalid-feedback" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SoTC)
                    @Html.EditorFor(model => model.SoTC, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.SoTC, "", new { @class = "invalid-feedback" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SoTCBatBuoc)
                    @Html.EditorFor(model => model.SoTCBatBuoc, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.SoTCBatBuoc, "", new { @class = "invalid-feedback" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SoTCTuChon)
                    @Html.EditorFor(model => model.SoTCTuChon, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.SoTCTuChon, "", new { @class = "invalid-feedback" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SoTietLT)
                    @Html.EditorFor(model => model.SoTietLT, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.SoTietLT, "", new { @class = "invalid-feedback" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SoTietTH)
                    @Html.EditorFor(model => model.SoTietTH, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.SoTietTH, "", new { @class = "invalid-feedback" })
                </div>

                <div class="text-left">
                    <input type="submit" value="Thêm ngay" class="btn btn-primary" /> hoặc trở lại <a class="text-decoration-none" href="@Url.Action("Index")">trang chính</a>
                </div>
        }
    </div>
</div>